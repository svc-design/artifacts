name: Sync Images for Microservice Demo

on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    paths:
      - '.github/workflows/sync-images-microservice-demo.yaml'
  workflow_dispatch:
    branches:
      - main

jobs:
  checkoutservice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync checkoutservice images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
          ALI_CLOUD_USER: ${{ secrets.ALI_CLOUD_USER }}
          ALI_CLOUD_PASSWORD: ${{ secrets.ALI_CLOUD_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          echo "$ALI_CLOUD_PASSWORD" | docker login --username=$ALI_CLOUD_USER --password-stdin registry.cn-hangzhou.aliyuncs.com
          docker pull registry.cn-hangzhou.aliyuncs.com/mse-hz/checkoutservice:1.0.0-SNAPSHOT
          docker tag registry.cn-hangzhou.aliyuncs.com/mse-hz/checkoutservice:1.0.0-SNAPSHOT images.onwalk.net/public/microservice-demo/checkoutservice:1.0.0-SNAPSHOT
          docker push images.onwalk.net/public/microservice-demo/checkoutservice:1.0.0-SNAPSHOT

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync frontend images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
          ALI_CLOUD_USER: ${{ secrets.ALI_CLOUD_USER }}
          ALI_CLOUD_PASSWORD: ${{ secrets.ALI_CLOUD_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          echo "$ALI_CLOUD_PASSWORD" | docker login --username=$ALI_CLOUD_USER --password-stdin registry.cn-hangzhou.aliyuncs.com
          docker pull registry.cn-hangzhou.aliyuncs.com/mse-hz/frontend:1.0.0-SNAPSHOT
          docker tag registry.cn-hangzhou.aliyuncs.com/mse-hz/frontend:1.0.0-SNAPSHOT images.onwalk.net/public/microservice-demo/frontend:1.0.0-SNAPSHOT
          docker push images.onwalk.net/public/microservice-demo/frontend:1.0.0-SNAPSHOT

  loadgenerator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync loadgenerator images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
          ALI_CLOUD_USER: ${{ secrets.ALI_CLOUD_USER }}
          ALI_CLOUD_PASSWORD: ${{ secrets.ALI_CLOUD_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          echo "$ALI_CLOUD_PASSWORD" | docker login --username=$ALI_CLOUD_USER --password-stdin registry.cn-hangzhou.aliyuncs.com
          docker pull registry.cn-hangzhou.aliyuncs.com/mse-hz/loadgenerator:1.0.0-SNAPSHOT
          docker tag registry.cn-hangzhou.aliyuncs.com/mse-hz/loadgenerator:1.0.0-SNAPSHOT images.onwalk.net/public/microservice-demo/loadgenerator:1.0.0-SNAPSHOT
          docker push images.onwalk.net/public/microservice-demo/loadgenerator:1.0.0-SNAPSHOT

  productservice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync productservice images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
          ALI_CLOUD_USER: ${{ secrets.ALI_CLOUD_USER }}
          ALI_CLOUD_PASSWORD: ${{ secrets.ALI_CLOUD_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          echo "$ALI_CLOUD_PASSWORD" | docker login --username=$ALI_CLOUD_USER --password-stdin registry.cn-hangzhou.aliyuncs.com
          docker pull registry.cn-hangzhou.aliyuncs.com/mse-hz/productservice:1.0.0-SNAPSHOT
          docker tag registry.cn-hangzhou.aliyuncs.com/mse-hz/productservice:1.0.0-SNAPSHOT images.onwalk.net/public/microservice-demo/productservice:1.0.0-SNAPSHOT
          docker push images.onwalk.net/public/microservice-demo/loadgenerator:1.0.0-SNAPSHOT

  zuul-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync zuul-gateway images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
          ALI_CLOUD_USER: ${{ secrets.ALI_CLOUD_USER }}
          ALI_CLOUD_PASSWORD: ${{ secrets.ALI_CLOUD_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          echo "$ALI_CLOUD_PASSWORD" | docker login --username=$ALI_CLOUD_USER --password-stdin registry.cn-hangzhou.aliyuncs.com
          docker pull registry.cn-hangzhou.aliyuncs.com/mse-hz/zuul-gateway:1.0.0-SNAPSHOT
          docker tag registry.cn-hangzhou.aliyuncs.com/mse-hz/zuul-gateway:1.0.0-SNAPSHOT images.onwalk.net/public/microservice-demo/zuul-gateway:1.0.0-SNAPSHOT
          docker push images.onwalk.net/public/microservice-demo/zuul-gateway:1.0.0-SNAPSHOT

  mysql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync mysql 5.6 images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          docker pull mysql:5.6
          docker tag mysql:5.6 images.onwalk.net/public/microservice-demo/mysql:5.6
          docker push images.onwalk.net/public/microservice-demo/mysql:5.6

  redis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync redis images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          docker pull redis:latest
          docker tag redis:latest images.onwalk.net/public/microservice-demo/redis:latest
          docker push images.onwalk.net/public/microservice-demo/redis:latest

  nacos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: sync nacos images
        env:
          USER: ${{ secrets.IMAGES_REPO_USER }}
          PASSWORD: ${{ secrets.IMAGES_REPO_PASSWORD }}
        shell: bash
        run: |
          sudo apt update && sudo apt install -y git
          echo "$PASSWORD" | docker login --username=$USER --password-stdin images.onwalk.net
          docker pull nacos/nacos-server:latest
          docker tag nacos/nacos-server:latest images.onwalk.net/public/microservice-demo/nacos-server:latest
          docker push images.onwalk.net/public/microservice-demo/nacos-server:latest
